# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-22 11:00
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_file', models.FileField(upload_to=b'attachments/%Y/%m/%d', verbose_name=b'Attachment')),
                ('mimetype', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField()),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('text', models.TextField()),
                ('status', models.CharField(choices=[(b'open', b'Open'), (b'closed', b'Closed'), (b'progress', b'In progress'), (b'hold', b'On hold'), (b'wait_input', b'Awaiting input'), (b'scheduled_release', b'Scheduled in release')], default=b'open', max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='ITConnector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('connector_type', models.CharField(max_length=50)),
                ('usr', models.CharField(max_length=250)),
                ('pwd', models.CharField(max_length=250)),
                ('uri', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='MailQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usr', models.CharField(max_length=250)),
                ('pwd', models.CharField(max_length=250)),
                ('host', models.CharField(max_length=50)),
                ('port', models.IntegerField(blank=True, default=110, null=True)),
                ('protocol', models.IntegerField(choices=[(0, b'POP'), (1, b'IMAP')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(choices=[(b'subject', b'Subject'), (b'from', b'From'), (b'to', b'To'), (b'text', b'Message body')], max_length=100)),
                ('regexp', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_time', models.FloatField(help_text=b"Response time in hours. Use '.' for decimals. Note that2.5 means two and a half hours, not two hours and 50 minutes.", null=True)),
                ('solution_time', models.FloatField(help_text=b'Time to resolve in hours. Same behavior as response time.', null=True)),
                ('priority', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SLA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('email_from', models.EmailField(blank=True, max_length=254, null=True)),
                ('default_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='defaultservice', to='mrwolfe.Service')),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[(b'open', b'Open'), (b'closed', b'Closed'), (b'progress', b'In progress'), (b'hold', b'On hold'), (b'wait_input', b'Awaiting input'), (b'scheduled_release', b'Scheduled in release')], max_length=100)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='mrwolfe.Issue')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mrwolfe.User')),
                ('sla', models.ManyToManyField(blank=True, to='mrwolfe.SLA')),
            ],
            bases=('mrwolfe.user',),
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mrwolfe.User')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=('mrwolfe.user',),
        ),
        migrations.AddField(
            model_name='service',
            name='sla',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrwolfe.SLA'),
        ),
        migrations.AddField(
            model_name='rule',
            name='sla',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrwolfe.SLA'),
        ),
        migrations.AddField(
            model_name='issue',
            name='assignee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assignee_set', to='mrwolfe.User'),
        ),
        migrations.AddField(
            model_name='issue',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mrwolfe.Service'),
        ),
        migrations.AddField(
            model_name='issue',
            name='sla',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mrwolfe.SLA'),
        ),
        migrations.AddField(
            model_name='comment',
            name='comment_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mrwolfe.User'),
        ),
        migrations.AddField(
            model_name='comment',
            name='issue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='mrwolfe.Issue'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='issue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrwolfe.Issue'),
        ),
        migrations.AddField(
            model_name='issue',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_set', to='mrwolfe.Contact'),
        ),
        migrations.AddField(
            model_name='contact',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
